syntax = "proto3";

package inventory;

import "google/api/annotations.proto";

// NodeType represents Node type.
enum NodeType {
  NODE_TYPE_INVALID = 0;
  BARE_METAL = 1;
  VIRTUAL_MACHINE = 2;
  CONTAINER = 3;
  REMOTE = 8;
  REMOTE_RDS = 9;
}

// Node represents a thing where Services and Agents are running.
message Node {
  // Unique node identifier.
  uint32 id = 1;
  // Node type.
  NodeType type = 2;
  // Unique node name.
  string name = 3;
}

// BareMetalNode represents bare metal Node.
message BareMetalNode {
  // Unique node identifier.
  uint32 id = 1;
  // Unique node name.
  string name = 2;
  // Hostname. Is not unique.
  string hostname = 3;
}

// ContainerNode represents a container (Docker) Node.
message ContainerNode {
  // Unique node identifier.
  uint32 id = 1;
  // Unique node name.
  string name = 2;
}

message NodesListRequest {}

message NodesListResponse {
  repeated Node node = 1;
  repeated BareMetalNode bare_metal = 2;
  repeated ContainerNode container = 3;
}

message NodesGetRequest {
  // Unique node identifier.
  uint32 id = 1;
}

message NodesGetResponse {
  oneof only_one {
    Node node = 1;
    BareMetalNode bare_metal = 2;
    ContainerNode container = 3;
  }
}

message AddBareMetalRequest {
  // Unique node name.
  string name = 1;
  // Hostname. Is not unique.
  string hostname = 2;
}

message AddBareMetalResponse {
  BareMetalNode node = 1;
}

// message RemoveBareMetalNodeRequest {
//   uint32 id = 1;
// }

// message RemoveBareMetalNodeResponse {}

// Nodes service provides public methods for managing Nodes.
service Nodes {
  // List returns a list of all Nodes.
  rpc List(NodesListRequest) returns (NodesListResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/List"
      body: "*"
    };
  }
  // Get returns a single Node by ID.
  rpc Get(NodesGetRequest) returns (NodesGetResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/Get"
      body: "*"
    };
  }
  // AddBareMetal adds bare metal Node.
  rpc AddBareMetal(AddBareMetalRequest) returns (AddBareMetalResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/AddBareMetal"
      body: "*"
    };
  }
  // rpc RemoveBareMetal(RemoveBareMetalNodeRequest) returns (RemoveBareMetalNodeResponse) {
  //   option (google.api.http) = {
  //     post: "/v0/inventory/Nodes/RemoveBareMetal"
  //     body: "*"
  //   };
  // }

}
