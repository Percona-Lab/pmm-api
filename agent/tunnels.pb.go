// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent/tunnels.proto

/*
Package agent is a generated protocol buffer package.

It is generated from these files:
	agent/tunnels.proto

It has these top-level messages:
	TunnelsDialRequest
	TunnelsDialResponse
	TunnelsData
	TunnelsEnvelopeFromAgent
	TunnelsEnvelopeFromGateway
*/
package agent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TunnelsDialRequest struct {
	Dial string `protobuf:"bytes,1,opt,name=dial" json:"dial,omitempty"`
}

func (m *TunnelsDialRequest) Reset()                    { *m = TunnelsDialRequest{} }
func (m *TunnelsDialRequest) String() string            { return proto.CompactTextString(m) }
func (*TunnelsDialRequest) ProtoMessage()               {}
func (*TunnelsDialRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TunnelsDialRequest) GetDial() string {
	if m != nil {
		return m.Dial
	}
	return ""
}

type TunnelsDialResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *TunnelsDialResponse) Reset()                    { *m = TunnelsDialResponse{} }
func (m *TunnelsDialResponse) String() string            { return proto.CompactTextString(m) }
func (*TunnelsDialResponse) ProtoMessage()               {}
func (*TunnelsDialResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TunnelsDialResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type TunnelsData struct {
	Error  string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Closed bool   `protobuf:"varint,3,opt,name=closed" json:"closed,omitempty"`
}

func (m *TunnelsData) Reset()                    { *m = TunnelsData{} }
func (m *TunnelsData) String() string            { return proto.CompactTextString(m) }
func (*TunnelsData) ProtoMessage()               {}
func (*TunnelsData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TunnelsData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TunnelsData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TunnelsData) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

type TunnelsEnvelopeFromAgent struct {
	// Types that are valid to be assigned to Payload:
	//	*TunnelsEnvelopeFromAgent_DialResponse
	//	*TunnelsEnvelopeFromAgent_Data
	Payload isTunnelsEnvelopeFromAgent_Payload `protobuf_oneof:"payload"`
}

func (m *TunnelsEnvelopeFromAgent) Reset()                    { *m = TunnelsEnvelopeFromAgent{} }
func (m *TunnelsEnvelopeFromAgent) String() string            { return proto.CompactTextString(m) }
func (*TunnelsEnvelopeFromAgent) ProtoMessage()               {}
func (*TunnelsEnvelopeFromAgent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isTunnelsEnvelopeFromAgent_Payload interface{ isTunnelsEnvelopeFromAgent_Payload() }

type TunnelsEnvelopeFromAgent_DialResponse struct {
	DialResponse *TunnelsDialResponse `protobuf:"bytes,1,opt,name=dial_response,json=dialResponse,oneof"`
}
type TunnelsEnvelopeFromAgent_Data struct {
	Data *TunnelsData `protobuf:"bytes,2,opt,name=data,oneof"`
}

func (*TunnelsEnvelopeFromAgent_DialResponse) isTunnelsEnvelopeFromAgent_Payload() {}
func (*TunnelsEnvelopeFromAgent_Data) isTunnelsEnvelopeFromAgent_Payload()         {}

func (m *TunnelsEnvelopeFromAgent) GetPayload() isTunnelsEnvelopeFromAgent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TunnelsEnvelopeFromAgent) GetDialResponse() *TunnelsDialResponse {
	if x, ok := m.GetPayload().(*TunnelsEnvelopeFromAgent_DialResponse); ok {
		return x.DialResponse
	}
	return nil
}

func (m *TunnelsEnvelopeFromAgent) GetData() *TunnelsData {
	if x, ok := m.GetPayload().(*TunnelsEnvelopeFromAgent_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TunnelsEnvelopeFromAgent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TunnelsEnvelopeFromAgent_OneofMarshaler, _TunnelsEnvelopeFromAgent_OneofUnmarshaler, _TunnelsEnvelopeFromAgent_OneofSizer, []interface{}{
		(*TunnelsEnvelopeFromAgent_DialResponse)(nil),
		(*TunnelsEnvelopeFromAgent_Data)(nil),
	}
}

func _TunnelsEnvelopeFromAgent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TunnelsEnvelopeFromAgent)
	// payload
	switch x := m.Payload.(type) {
	case *TunnelsEnvelopeFromAgent_DialResponse:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DialResponse); err != nil {
			return err
		}
	case *TunnelsEnvelopeFromAgent_Data:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TunnelsEnvelopeFromAgent.Payload has unexpected type %T", x)
	}
	return nil
}

func _TunnelsEnvelopeFromAgent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TunnelsEnvelopeFromAgent)
	switch tag {
	case 1: // payload.dial_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TunnelsDialResponse)
		err := b.DecodeMessage(msg)
		m.Payload = &TunnelsEnvelopeFromAgent_DialResponse{msg}
		return true, err
	case 2: // payload.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TunnelsData)
		err := b.DecodeMessage(msg)
		m.Payload = &TunnelsEnvelopeFromAgent_Data{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TunnelsEnvelopeFromAgent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TunnelsEnvelopeFromAgent)
	// payload
	switch x := m.Payload.(type) {
	case *TunnelsEnvelopeFromAgent_DialResponse:
		s := proto.Size(x.DialResponse)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TunnelsEnvelopeFromAgent_Data:
		s := proto.Size(x.Data)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TunnelsEnvelopeFromGateway struct {
	// Types that are valid to be assigned to Payload:
	//	*TunnelsEnvelopeFromGateway_DialRequest
	//	*TunnelsEnvelopeFromGateway_Data
	Payload isTunnelsEnvelopeFromGateway_Payload `protobuf_oneof:"payload"`
}

func (m *TunnelsEnvelopeFromGateway) Reset()                    { *m = TunnelsEnvelopeFromGateway{} }
func (m *TunnelsEnvelopeFromGateway) String() string            { return proto.CompactTextString(m) }
func (*TunnelsEnvelopeFromGateway) ProtoMessage()               {}
func (*TunnelsEnvelopeFromGateway) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isTunnelsEnvelopeFromGateway_Payload interface{ isTunnelsEnvelopeFromGateway_Payload() }

type TunnelsEnvelopeFromGateway_DialRequest struct {
	DialRequest *TunnelsDialRequest `protobuf:"bytes,1,opt,name=dial_request,json=dialRequest,oneof"`
}
type TunnelsEnvelopeFromGateway_Data struct {
	Data *TunnelsData `protobuf:"bytes,2,opt,name=data,oneof"`
}

func (*TunnelsEnvelopeFromGateway_DialRequest) isTunnelsEnvelopeFromGateway_Payload() {}
func (*TunnelsEnvelopeFromGateway_Data) isTunnelsEnvelopeFromGateway_Payload()        {}

func (m *TunnelsEnvelopeFromGateway) GetPayload() isTunnelsEnvelopeFromGateway_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TunnelsEnvelopeFromGateway) GetDialRequest() *TunnelsDialRequest {
	if x, ok := m.GetPayload().(*TunnelsEnvelopeFromGateway_DialRequest); ok {
		return x.DialRequest
	}
	return nil
}

func (m *TunnelsEnvelopeFromGateway) GetData() *TunnelsData {
	if x, ok := m.GetPayload().(*TunnelsEnvelopeFromGateway_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TunnelsEnvelopeFromGateway) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TunnelsEnvelopeFromGateway_OneofMarshaler, _TunnelsEnvelopeFromGateway_OneofUnmarshaler, _TunnelsEnvelopeFromGateway_OneofSizer, []interface{}{
		(*TunnelsEnvelopeFromGateway_DialRequest)(nil),
		(*TunnelsEnvelopeFromGateway_Data)(nil),
	}
}

func _TunnelsEnvelopeFromGateway_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TunnelsEnvelopeFromGateway)
	// payload
	switch x := m.Payload.(type) {
	case *TunnelsEnvelopeFromGateway_DialRequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DialRequest); err != nil {
			return err
		}
	case *TunnelsEnvelopeFromGateway_Data:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TunnelsEnvelopeFromGateway.Payload has unexpected type %T", x)
	}
	return nil
}

func _TunnelsEnvelopeFromGateway_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TunnelsEnvelopeFromGateway)
	switch tag {
	case 1: // payload.dial_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TunnelsDialRequest)
		err := b.DecodeMessage(msg)
		m.Payload = &TunnelsEnvelopeFromGateway_DialRequest{msg}
		return true, err
	case 2: // payload.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TunnelsData)
		err := b.DecodeMessage(msg)
		m.Payload = &TunnelsEnvelopeFromGateway_Data{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TunnelsEnvelopeFromGateway_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TunnelsEnvelopeFromGateway)
	// payload
	switch x := m.Payload.(type) {
	case *TunnelsEnvelopeFromGateway_DialRequest:
		s := proto.Size(x.DialRequest)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TunnelsEnvelopeFromGateway_Data:
		s := proto.Size(x.Data)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*TunnelsDialRequest)(nil), "agent.TunnelsDialRequest")
	proto.RegisterType((*TunnelsDialResponse)(nil), "agent.TunnelsDialResponse")
	proto.RegisterType((*TunnelsData)(nil), "agent.TunnelsData")
	proto.RegisterType((*TunnelsEnvelopeFromAgent)(nil), "agent.TunnelsEnvelopeFromAgent")
	proto.RegisterType((*TunnelsEnvelopeFromGateway)(nil), "agent.TunnelsEnvelopeFromGateway")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Tunnels service

type TunnelsClient interface {
	Make(ctx context.Context, opts ...grpc.CallOption) (Tunnels_MakeClient, error)
}

type tunnelsClient struct {
	cc *grpc.ClientConn
}

func NewTunnelsClient(cc *grpc.ClientConn) TunnelsClient {
	return &tunnelsClient{cc}
}

func (c *tunnelsClient) Make(ctx context.Context, opts ...grpc.CallOption) (Tunnels_MakeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Tunnels_serviceDesc.Streams[0], c.cc, "/agent.Tunnels/Make", opts...)
	if err != nil {
		return nil, err
	}
	x := &tunnelsMakeClient{stream}
	return x, nil
}

type Tunnels_MakeClient interface {
	Send(*TunnelsEnvelopeFromAgent) error
	Recv() (*TunnelsEnvelopeFromGateway, error)
	grpc.ClientStream
}

type tunnelsMakeClient struct {
	grpc.ClientStream
}

func (x *tunnelsMakeClient) Send(m *TunnelsEnvelopeFromAgent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tunnelsMakeClient) Recv() (*TunnelsEnvelopeFromGateway, error) {
	m := new(TunnelsEnvelopeFromGateway)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Tunnels service

type TunnelsServer interface {
	Make(Tunnels_MakeServer) error
}

func RegisterTunnelsServer(s *grpc.Server, srv TunnelsServer) {
	s.RegisterService(&_Tunnels_serviceDesc, srv)
}

func _Tunnels_Make_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TunnelsServer).Make(&tunnelsMakeServer{stream})
}

type Tunnels_MakeServer interface {
	Send(*TunnelsEnvelopeFromGateway) error
	Recv() (*TunnelsEnvelopeFromAgent, error)
	grpc.ServerStream
}

type tunnelsMakeServer struct {
	grpc.ServerStream
}

func (x *tunnelsMakeServer) Send(m *TunnelsEnvelopeFromGateway) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tunnelsMakeServer) Recv() (*TunnelsEnvelopeFromAgent, error) {
	m := new(TunnelsEnvelopeFromAgent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Tunnels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Tunnels",
	HandlerType: (*TunnelsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Make",
			Handler:       _Tunnels_Make_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "agent/tunnels.proto",
}

func init() { proto.RegisterFile("agent/tunnels.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4d, 0x4b, 0xf4, 0x30,
	0x10, 0xc7, 0x37, 0xcf, 0xb3, 0x2f, 0xee, 0x74, 0xbd, 0x64, 0x45, 0x6a, 0x2f, 0xd6, 0x9e, 0x02,
	0x42, 0x95, 0x7a, 0x17, 0x56, 0x7c, 0xe9, 0x45, 0x85, 0xe0, 0xc5, 0x93, 0x8c, 0x76, 0x90, 0xc5,
	0xd8, 0xd4, 0x34, 0xab, 0xec, 0xc7, 0xd0, 0x4f, 0x2c, 0x9b, 0x46, 0xe8, 0x6a, 0xbd, 0x78, 0x4b,
	0x86, 0xdf, 0x74, 0x7e, 0xff, 0x69, 0x60, 0x8a, 0x8f, 0x54, 0xda, 0x03, 0xbb, 0x28, 0x4b, 0x52,
	0x75, 0x5a, 0x19, 0x6d, 0x35, 0x1f, 0xb8, 0x62, 0x22, 0x80, 0xdf, 0x34, 0xf5, 0xd3, 0x39, 0x2a,
	0x49, 0x2f, 0x0b, 0xaa, 0x2d, 0xe7, 0xd0, 0x2f, 0xe6, 0xa8, 0x42, 0x16, 0x33, 0x31, 0x96, 0xee,
	0x9c, 0xec, 0xc3, 0x74, 0x8d, 0xac, 0x2b, 0x5d, 0xd6, 0xc4, 0xb7, 0x60, 0x40, 0xc6, 0x68, 0xe3,
	0xd9, 0xe6, 0x92, 0x5c, 0x43, 0xf0, 0x05, 0xa3, 0xc5, 0x6e, 0xc8, 0x4d, 0x41, 0x8b, 0xe1, 0xbf,
	0x98, 0x89, 0x89, 0x74, 0x67, 0xbe, 0x0d, 0xc3, 0x07, 0xa5, 0x6b, 0x2a, 0xc2, 0xff, 0x31, 0x13,
	0x1b, 0xd2, 0xdf, 0x92, 0x0f, 0x06, 0xa1, 0xff, 0xe2, 0x59, 0xf9, 0x4a, 0x4a, 0x57, 0x74, 0x6e,
	0xf4, 0xf3, 0x6c, 0x15, 0x82, 0xcf, 0x60, 0x73, 0xa5, 0x78, 0x67, 0xbc, 0x94, 0x1b, 0x13, 0x64,
	0x51, 0xea, 0x32, 0xa6, 0x1d, 0xda, 0x79, 0x4f, 0x4e, 0x8a, 0x76, 0x0c, 0xd1, 0x72, 0x09, 0x32,
	0xfe, 0xad, 0x13, 0x2d, 0xe6, 0xbd, 0xc6, 0xf0, 0x64, 0x0c, 0xa3, 0x0a, 0x97, 0x4a, 0x63, 0x91,
	0xbc, 0x33, 0x88, 0x3a, 0xa4, 0x2e, 0xd0, 0xd2, 0x1b, 0x2e, 0xf9, 0x31, 0x4c, 0xbc, 0x96, 0xdb,
	0xaa, 0xb7, 0xda, 0xe9, 0xb2, 0x72, 0x40, 0xde, 0x93, 0x41, 0xd1, 0xfa, 0x0b, 0x7f, 0x71, 0xca,
	0x6e, 0x61, 0xe4, 0x09, 0x7e, 0x05, 0xfd, 0x4b, 0x7c, 0x22, 0xbe, 0xbb, 0xde, 0xf9, 0x63, 0x7f,
	0xd1, 0xde, 0xef, 0x80, 0xcf, 0x22, 0xd8, 0x21, 0xbb, 0x1f, 0xba, 0x97, 0x73, 0xf4, 0x19, 0x00,
	0x00, 0xff, 0xff, 0xb1, 0x1d, 0x5a, 0x7a, 0x50, 0x02, 0x00, 0x00,
}
