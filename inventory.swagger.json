{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Server Inventory API",
    "version": "version 0"
  },
  "paths": {
    "/v0/inventory/Agents/AddMySQLdExporter": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Add mysqld_exporter agent.",
        "operationId": "AddMySQLdExporter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddBareMetal": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "Add Bare Metal node.",
        "operationId": "AddBareMetal",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddBareMetalNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddBareMetalNodeResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "inventoryAddBareMetalNodeRequest": {
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Is not unique.",
          "type": "string"
        },
        "name": {
          "description": "Unique node name.",
          "type": "string"
        }
      }
    },
    "inventoryAddBareMetalNodeResponse": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/inventoryBareMetalNode"
        }
      }
    },
    "inventoryAddMySQLdExporterRequest": {
      "type": "object",
      "properties": {
        "password": {
          "description": "MySQL password for extracting metrics.",
          "type": "string"
        },
        "runs_on_node_id": {
          "description": "Node identifier where agent should run.",
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "description": "MySQL username for extracting metrics.",
          "type": "string"
        }
      }
    },
    "inventoryAddMySQLdExporterResponse": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        }
      }
    },
    "inventoryBareMetalNode": {
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Is not unique.",
          "type": "string"
        },
        "id": {
          "description": "Unique node identifier.",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Unique node name.",
          "type": "string"
        }
      }
    },
    "inventoryMySQLdExporter": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique agent identifier.",
          "type": "integer",
          "format": "int64"
        },
        "listen_port": {
          "description": "HTTP listen port for exposing metrics.",
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "description": "MySQL password for extracting metrics.",
          "type": "string"
        },
        "runs_on_node_id": {
          "description": "Node identifier where agent runs.",
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "description": "MySQL username for extracting metrics.",
          "type": "string"
        }
      }
    }
  }
}